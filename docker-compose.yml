version: "3.9"

services:
  postgres:
    image: postgres:17
    container_name: onboarding_pg
    restart: unless-stopped
    environment:
      POSTGRES_DB: onboard
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - pg_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  qdrant:
    image: qdrant/qdrant:v1.14.0
    container_name: onboarding_qdrant
    command: sh -c "apt-get update && apt-get install -y --no-install-recommends curl && apt-get clean && /qdrant/qdrant"
    restart: unless-stopped
    volumes:
      - qdrant_data:/qdrant/storage
    ports:
      - "6333:6333"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6333/healthz"]
      interval: 10s
      timeout: 5s
      retries: 5

  bot:
    build:
      context: .
      dockerfile: docker/Dockerfile
    container_name: onboarding_bot
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      qdrant:
        condition: service_healthy
    env_file:
      - .env.docker
    volumes:
      - ./models:/models
      - ./data:/app/data        # уроки/медиа-файлы
      - ./migrations:/app/migrations
    ports:
      - "8445:8443"             # если понадобится веб-хуки
      - "9102:9100"
    command: []                 # запускается entrypoint.sh

  prometheus:
    image: prom/prometheus:v2.52.0
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prom_data:/prometheus
    ports:
      - "9090:9090"
    restart: unless-stopped
    depends_on: [ bot ]

  grafana:
    image: grafana/grafana:10.4.3
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml
    ports:
      - "3000:3000"
    restart: unless-stopped
    depends_on: [ prometheus ]

  postgres_exporter:
    image: prometheuscommunity/postgres-exporter
    environment:
      DATA_SOURCE_NAME: "postgresql://postgres:postgres@postgres:5432/onboard?sslmode=disable"
    restart: unless-stopped
    depends_on: [ postgres ]

  node_exporter:
    image: prom/node-exporter:v1.8.1
    container_name: node_exporter
    restart: unless-stopped
    ports:
      - "9101:9101"

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.49.1
    container_name: cadvisor
    restart: unless-stopped
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - "8080:8080"           # веб-UI cadvisor (необязательно)

volumes:
  prom_data:
  grafana_data:
  pg_data:
  qdrant_data:
